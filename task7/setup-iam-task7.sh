#!/bin/bash

# Task 7: API Gateway + Lambda Integration
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
API_ID="erv7myh2nb"
ROUTE_ID="py00o9v"
LAMBDA_FUNCTION="cmtr-4n6e9j62-api-gwlp-lambda-contacts"
REGION="eu-west-1"
ACCOUNT_ID="418272778502"

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  Task 7: API Gateway + Lambda         ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials
if [ -z "$AWS_ACCESS_KEY_ID" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  AWS credentials –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
    echo "export AWS_ACCESS_KEY_ID=AKIAWCYYADEDESGATYGT"
    echo "export AWS_SECRET_ACCESS_KEY=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"
    echo "export AWS_DEFAULT_REGION=eu-west-1"
    exit 1
fi

echo -e "${GREEN}‚úÖ AWS credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
echo ""

# –ü–æ–ª—É—á–∏—Ç—å Lambda ARN
LAMBDA_ARN=$(aws lambda get-function --function-name "$LAMBDA_FUNCTION" --query 'Configuration.FunctionArn' --output text)
echo -e "${GREEN}‚úÖ Lambda ARN: $LAMBDA_ARN${NC}"
echo ""

# –ü–æ–ª—É—á–∏—Ç—å API Gateway endpoint
API_ENDPOINT=$(aws apigatewayv2 get-api --api-id "$API_ID" --query 'ApiEndpoint' --output text)
echo -e "${GREEN}‚úÖ API Endpoint: $API_ENDPOINT${NC}"
echo ""

# –®–∞–≥ 1: –°–æ–∑–¥–∞—Ç—å Lambda integration –¥–ª—è API Gateway
echo -e "${YELLOW}üìã –®–∞–≥ 1/3: –°–æ–∑–¥–∞–Ω–∏–µ Lambda integration...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ integrations
EXISTING_INTEGRATION=$(aws apigatewayv2 get-integrations --api-id "$API_ID" \
    --query "Items[?IntegrationUri=='$LAMBDA_ARN'].IntegrationId" --output text 2>/dev/null || echo "")

if [ -z "$EXISTING_INTEGRATION" ]; then
    # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é integration
    INTEGRATION_ID=$(aws apigatewayv2 create-integration \
        --api-id "$API_ID" \
        --integration-type AWS_PROXY \
        --integration-uri "$LAMBDA_ARN" \
        --payload-format-version 2.0 \
        --query 'IntegrationId' \
        --output text)
    
    echo -e "${GREEN}‚úÖ Lambda integration —Å–æ–∑–¥–∞–Ω (ID: $INTEGRATION_ID)${NC}"
else
    INTEGRATION_ID="$EXISTING_INTEGRATION"
    echo -e "${YELLOW}‚ö†Ô∏è  Lambda integration —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: $INTEGRATION_ID)${NC}"
fi
echo ""

# –®–∞–≥ 2: –û–±–Ω–æ–≤–∏—Ç—å route –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è integration
echo -e "${YELLOW}üîó –®–∞–≥ 2/3: –ü—Ä–∏–≤—è–∑–∫–∞ integration –∫ route...${NC}"

aws apigatewayv2 update-route \
    --api-id "$API_ID" \
    --route-id "$ROUTE_ID" \
    --target "integrations/$INTEGRATION_ID" >/dev/null

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Route –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Lambda integration${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è route${NC}"
    exit 1
fi
echo ""

# –®–∞–≥ 3: –î–æ–±–∞–≤–∏—Ç—å Lambda permission –¥–ª—è API Gateway
echo -e "${YELLOW}üîê –®–∞–≥ 3/3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Lambda permissions...${NC}"

# –°–æ–∑–¥–∞—Ç—å source ARN –¥–ª—è API Gateway
SOURCE_ARN="arn:aws:execute-api:$REGION:$ACCOUNT_ID:$API_ID/*/*"

# –î–æ–±–∞–≤–∏—Ç—å permission
aws lambda add-permission \
    --function-name "$LAMBDA_FUNCTION" \
    --statement-id "AllowAPIGatewayInvoke-task7" \
    --action "lambda:InvokeFunction" \
    --principal "apigateway.amazonaws.com" \
    --source-arn "$SOURCE_ARN" \
    2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è  Permission –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"

echo -e "${GREEN}‚úÖ Lambda permission –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
echo ""

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã                 ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ integration
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda integration...${NC}"
INTEGRATION_CHECK=$(aws apigatewayv2 get-integration \
    --api-id "$API_ID" \
    --integration-id "$INTEGRATION_ID" \
    --query '[IntegrationType,IntegrationUri]' \
    --output text)

if echo "$INTEGRATION_CHECK" | grep -q "AWS_PROXY"; then
    echo -e "${GREEN}‚úÖ Lambda integration –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    echo -e "${GREEN}   Type: AWS_PROXY${NC}"
else
    echo -e "${RED}‚ùå Lambda integration –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi
echo ""

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ route target
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ route configuration...${NC}"
ROUTE_TARGET=$(aws apigatewayv2 get-route \
    --api-id "$API_ID" \
    --route-id "$ROUTE_ID" \
    --query 'Target' \
    --output text)

if [ "$ROUTE_TARGET" == "integrations/$INTEGRATION_ID" ]; then
    echo -e "${GREEN}‚úÖ Route –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Lambda integration${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Route target: $ROUTE_TARGET${NC}"
fi
echo ""

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda permission
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda permissions...${NC}"
LAMBDA_POLICY=$(aws lambda get-policy --function-name "$LAMBDA_FUNCTION" --query 'Policy' --output text 2>/dev/null || echo "{}")

if echo "$LAMBDA_POLICY" | grep -q "apigateway.amazonaws.com"; then
    echo -e "${GREEN}‚úÖ Lambda permission –¥–ª—è API Gateway –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå Lambda permission –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi
echo ""

# –¢–µ—Å—Ç 4: HTTP –∑–∞–ø—Ä–æ—Å –∫ API
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint...${NC}"
FULL_ENDPOINT="$API_ENDPOINT/contacts"
echo -e "${BLUE}   –ó–∞–ø—Ä–æ—Å –∫: $FULL_ENDPOINT${NC}"

HTTP_RESPONSE=$(curl -s -w "\n%{http_code}" "$FULL_ENDPOINT" 2>/dev/null)
HTTP_CODE=$(echo "$HTTP_RESPONSE" | tail -n 1)
RESPONSE_BODY=$(echo "$HTTP_RESPONSE" | sed '$d')

if [ "$HTTP_CODE" == "200" ]; then
    echo -e "${GREEN}‚úÖ API —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP 200)${NC}"
    echo -e "${GREEN}   Response preview:${NC}"
    echo "$RESPONSE_BODY" | head -10
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —ç—Ç–æ JSON —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
    if echo "$RESPONSE_BODY" | grep -q "\"name\""; then
        echo -e "${GREEN}‚úÖ Response —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  HTTP Status: $HTTP_CODE${NC}"
    echo -e "${YELLOW}   Response: $RESPONSE_BODY${NC}"
fi
echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  ‚úÖ Task 7 –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!          ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""
echo -e "${GREEN}–ß—Ç–æ –±—ã–ª–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:${NC}"
echo -e "  ‚úÖ Lambda integration —Å–æ–∑–¥–∞–Ω"
echo -e "  ‚úÖ Route –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Lambda"
echo -e "  ‚úÖ Lambda permissions –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
echo ""
echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API:${NC}"
echo -e "  ${GREEN}Endpoint:${NC} $FULL_ENDPOINT"
echo -e "  ${GREEN}Browser:${NC} –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
echo -e "  ${GREEN}curl:${NC} curl $FULL_ENDPOINT"
echo ""
