#!/bin/bash

# Task 7: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Lambda Permission –¥–ª—è API Gateway
# –ü–æ–∑–≤–æ–ª—è–µ—Ç API Gateway –≤—ã–∑—ã–≤–∞—Ç—å Lambda —Ñ—É–Ω–∫—Ü–∏—é

set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Lambda Permission         ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ä–µ–∑ environment variables)
LAMBDA_FUNCTION="${LAMBDA_FUNCTION:-task7-contacts-lambda}"
API_ID="${API_ID:-erv7myh2nb}"
REGION="${REGION:-eu-west-1}"
ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)

echo -e "${YELLOW}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:${NC}"
echo -e "  Lambda: $LAMBDA_FUNCTION"
echo -e "  API ID: $API_ID"
echo -e "  Region: $REGION"
echo -e "  Account: $ACCOUNT_ID"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ Lambda —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda —Ñ—É–Ω–∫—Ü–∏–∏...${NC}"
LAMBDA_ARN=$(aws lambda get-function \
    --function-name "$LAMBDA_FUNCTION" \
    --query 'Configuration.FunctionArn' \
    --output text 2>/dev/null)

if [ -z "$LAMBDA_ARN" ]; then
    echo -e "${RED}‚ùå Lambda —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $LAMBDA_FUNCTION${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Lambda ARN: $LAMBDA_ARN${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ API Gateway —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API Gateway...${NC}"
API_NAME=$(aws apigatewayv2 get-api \
    --api-id "$API_ID" \
    --query 'Name' \
    --output text 2>/dev/null)

if [ -z "$API_NAME" ]; then
    echo -e "${RED}‚ùå API Gateway –Ω–µ –Ω–∞–π–¥–µ–Ω: $API_ID${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ API Gateway: $API_NAME (ID: $API_ID)${NC}"
echo ""

# Source ARN –¥–ª—è API Gateway
# –§–æ—Ä–º–∞—Ç: arn:aws:execute-api:region:account-id:api-id/*/*
# –ü–∞—Ç—Ç–µ—Ä–Ω /*/* –æ–∑–Ω–∞—á–∞–µ—Ç: –ª—é–±–æ–π stage / –ª—é–±–æ–π HTTP –º–µ—Ç–æ–¥ –∏ path
SOURCE_ARN="arn:aws:execute-api:$REGION:$ACCOUNT_ID:$API_ID/*/*"

echo -e "${YELLOW}Source ARN: $SOURCE_ARN${NC}"
echo ""

# –î–æ–±–∞–≤–∏—Ç—å permission
echo -e "${YELLOW}üîê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ permission...${NC}"

# Statement ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º
STATEMENT_ID="AllowAPIGatewayInvoke-${API_ID}"

# –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å permission
ADD_RESULT=$(aws lambda add-permission \
    --function-name "$LAMBDA_FUNCTION" \
    --statement-id "$STATEMENT_ID" \
    --action "lambda:InvokeFunction" \
    --principal "apigateway.amazonaws.com" \
    --source-arn "$SOURCE_ARN" \
    --output json 2>&1)

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if echo "$ADD_RESULT" | grep -q "ResourceConflictException"; then
    echo -e "${YELLOW}‚ö†Ô∏è  Permission —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    
    # –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–¥–∞–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å
    echo -e "${YELLOW}–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å? (y/n)${NC}"
    read -r RESPONSE
    
    if [ "$RESPONSE" == "y" ]; then
        echo -e "${YELLOW}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ permission...${NC}"
        aws lambda remove-permission \
            --function-name "$LAMBDA_FUNCTION" \
            --statement-id "$STATEMENT_ID" \
            --output json > /dev/null
        
        echo -e "${GREEN}‚úÖ Permission —É–¥–∞–ª–µ–Ω${NC}"
        
        echo -e "${YELLOW}üîê –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ permission...${NC}"
        aws lambda add-permission \
            --function-name "$LAMBDA_FUNCTION" \
            --statement-id "$STATEMENT_ID" \
            --action "lambda:InvokeFunction" \
            --principal "apigateway.amazonaws.com" \
            --source-arn "$SOURCE_ARN" \
            --output json > /dev/null
        
        echo -e "${GREEN}‚úÖ Permission –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ Permission —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω${NC}"
fi

echo ""

# –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è Permission                ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –ü–æ–ª—É—á–∏—Ç—å policy Lambda —Ñ—É–Ω–∫—Ü–∏–∏
echo -e "${YELLOW}üìã –ü–æ–ª—É—á–µ–Ω–∏–µ Lambda Policy...${NC}"
LAMBDA_POLICY=$(aws lambda get-policy \
    --function-name "$LAMBDA_FUNCTION" \
    --query 'Policy' \
    --output text 2>/dev/null)

if [ -n "$LAMBDA_POLICY" ]; then
    echo -e "${GREEN}‚úÖ Lambda Policy —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    echo ""
    
    # –ü–∞—Ä—Å–∏—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –≤–∏–¥–µ
    echo -e "${YELLOW}Policy —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:${NC}"
    echo "$LAMBDA_POLICY" | python3 -m json.tool 2>/dev/null | grep -A 15 "$STATEMENT_ID" || \
        echo "$LAMBDA_POLICY" | python3 -m json.tool 2>/dev/null
else
    echo -e "${RED}‚ùå Lambda Policy –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ policy
echo -e "${YELLOW}üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ Policy –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Principal
if echo "$LAMBDA_POLICY" | grep -q "apigateway.amazonaws.com"; then
    echo -e "${GREEN}‚úÖ Principal: apigateway.amazonaws.com${NC}"
else
    echo -e "${RED}‚ùå Principal –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Action
if echo "$LAMBDA_POLICY" | grep -q "lambda:InvokeFunction"; then
    echo -e "${GREEN}‚úÖ Action: lambda:InvokeFunction${NC}"
else
    echo -e "${RED}‚ùå Action –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Source ARN
if echo "$LAMBDA_POLICY" | grep -q "$API_ID"; then
    echo -e "${GREEN}‚úÖ Source ARN —Å–æ–¥–µ—Ä–∂–∏—Ç API ID: $API_ID${NC}"
else
    echo -e "${RED}‚ùå Source ARN –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç API ID${NC}"
fi

echo ""

# –¢–µ—Å—Ç: –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—ã–∑–≤–∞—Ç—å —á–µ—Ä–µ–∑ API Gateway
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç: API Gateway -> Lambda...${NC}"

API_ENDPOINT=$(aws apigatewayv2 get-api \
    --api-id "$API_ID" \
    --query 'ApiEndpoint' \
    --output text)

FULL_ENDPOINT="$API_ENDPOINT/contacts"

echo -e "${BLUE}   URL: $FULL_ENDPOINT${NC}"
echo -e "${YELLOW}   –û—Ç–ø—Ä–∞–≤–∫–∞ HTTP GET –∑–∞–ø—Ä–æ—Å–∞...${NC}"

# –ü–æ–¥–æ–∂–¥–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è propagation
sleep 2

HTTP_CODE=$(curl -s -o /tmp/api-response.json -w "%{http_code}" "$FULL_ENDPOINT" 2>/dev/null || echo "000")

if [ "$HTTP_CODE" == "200" ]; then
    echo -e "${GREEN}‚úÖ HTTP 200: Lambda —É—Å–ø–µ—à–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ API Gateway${NC}"
    echo ""
    echo -e "${YELLOW}Response (–ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫):${NC}"
    cat /tmp/api-response.json | python3 -m json.tool 2>/dev/null | head -10 || cat /tmp/api-response.json | head -10
    rm -f /tmp/api-response.json
elif [ "$HTTP_CODE" == "403" ]; then
    echo -e "${RED}‚ùå HTTP 403: Forbidden - Permission –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    echo -e "${YELLOW}–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:${NC}"
    echo -e "  1. Source ARN –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å API Gateway ARN"
    echo -e "  2. Statement ID –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å –¥—Ä—É–≥–∏–º permission"
    echo -e "  3. –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è propagation"
elif [ "$HTTP_CODE" == "404" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  HTTP 404: Route –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Lambda${NC}"
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:${NC}"
    echo -e "  aws apigatewayv2 get-routes --api-id $API_ID"
elif [ "$HTTP_CODE" == "000" ]; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  HTTP $HTTP_CODE: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç${NC}"
    cat /tmp/api-response.json 2>/dev/null || echo "(no response body)"
    rm -f /tmp/api-response.json
fi

echo ""

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Statement ID
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  ‚ÑπÔ∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è          ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""
echo -e "${YELLOW}Statement ID: $STATEMENT_ID${NC}"
echo -e "${YELLOW}Source ARN: $SOURCE_ARN${NC}"
echo ""
echo -e "${YELLOW}–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è permission:${NC}"
echo ""
echo -e "# –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ policy"
echo -e "aws lambda get-policy --function-name $LAMBDA_FUNCTION | jq"
echo ""
echo -e "# –£–¥–∞–ª–µ–Ω–∏–µ permission"
echo -e "aws lambda remove-permission \\"
echo -e "    --function-name $LAMBDA_FUNCTION \\"
echo -e "    --statement-id $STATEMENT_ID"
echo ""
echo -e "# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ permission –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ route"
echo -e "# –§–æ—Ä–º–∞—Ç Source ARN: arn:aws:execute-api:region:account:api-id/stage/method/path"
echo -e "aws lambda add-permission \\"
echo -e "    --function-name $LAMBDA_FUNCTION \\"
echo -e "    --statement-id AllowAPIGatewayInvokeGET \\"
echo -e "    --action lambda:InvokeFunction \\"
echo -e "    --principal apigateway.amazonaws.com \\"
echo -e "    --source-arn \"arn:aws:execute-api:$REGION:$ACCOUNT_ID:$API_ID/*/GET/contacts\""
echo ""
echo -e "# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ permission –¥–ª—è –≤—Å–µ—Ö stages –∏ routes (—Ç–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)"
echo -e "aws lambda add-permission \\"
echo -e "    --function-name $LAMBDA_FUNCTION \\"
echo -e "    --statement-id $STATEMENT_ID \\"
echo -e "    --action lambda:InvokeFunction \\"
echo -e "    --principal apigateway.amazonaws.com \\"
echo -e "    --source-arn \"$SOURCE_ARN\""
echo ""
echo -e "${YELLOW}Source ARN –ü–∞—Ç—Ç–µ—Ä–Ω—ã:${NC}"
echo -e "  */*              - –í—Å–µ stages, –≤—Å–µ routes"
echo -e "  \$default/*       - Stage \$default, –≤—Å–µ routes"
echo -e "  */GET/contacts   - –í—Å–µ stages, —Ç–æ–ª—å–∫–æ GET /contacts"
echo -e "  \$default/GET/*   - Stage \$default, –≤—Å–µ GET routes"
echo ""
echo -e "${GREEN}‚úÖ Permission –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"
echo ""
