#!/bin/bash

# Task 6: S3 + SQS + Lambda Event-Driven Architecture
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BUCKET_NAME="cmtr-4n6e9j62-s3-snlt-bucket-962877"
QUEUE_NAME="cmtr-4n6e9j62-s3-snlt-queue"
LAMBDA_FUNCTION="cmtr-4n6e9j62-s3-snlt-lambda"
REGION="eu-west-1"
ACCOUNT_ID="842676008964"

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  Task 6: S3 + SQS + Lambda            ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials
if [ -z "$AWS_ACCESS_KEY_ID" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  AWS credentials –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
    echo "export AWS_ACCESS_KEY_ID=AKIA4IM3HPACLXLPMS77"
    echo "export AWS_SECRET_ACCESS_KEY=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"
    echo "export AWS_DEFAULT_REGION=eu-west-1"
    exit 1
fi

echo -e "${GREEN}‚úÖ AWS credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
echo ""

# –ü–æ–ª—É—á–∏—Ç—å Queue URL
QUEUE_URL="https://sqs.$REGION.amazonaws.com/$ACCOUNT_ID/$QUEUE_NAME"
echo -e "${GREEN}‚úÖ Queue URL: $QUEUE_URL${NC}"
echo ""

# –ü–æ–ª—É—á–∏—Ç—å Queue ARN
QUEUE_ARN=$(aws sqs get-queue-attributes --queue-url "$QUEUE_URL" --attribute-names QueueArn --query 'Attributes.QueueArn' --output text)
echo -e "${GREEN}‚úÖ Queue ARN: $QUEUE_ARN${NC}"
echo ""

# –®–∞–≥ 1: –°–æ–∑–¥–∞—Ç—å S3 Event Notification –¥–ª—è SQS
echo -e "${YELLOW}üìã –®–∞–≥ 1/3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ S3 Event Notification...${NC}"

# –°–æ–∑–¥–∞—Ç—å notification configuration
cat > /tmp/s3-notification-config.json << EOF
{
  "QueueConfigurations": [
    {
      "Id": "S3ToSQSNotification",
      "QueueArn": "$QUEUE_ARN",
      "Events": [
        "s3:ObjectCreated:*"
      ],
      "Filter": {
        "Key": {
          "FilterRules": [
            {
              "Name": "prefix",
              "Value": "input/"
            }
          ]
        }
      }
    }
  ]
}
EOF

aws s3api put-bucket-notification-configuration \
    --bucket "$BUCKET_NAME" \
    --notification-configuration file:///tmp/s3-notification-config.json

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ S3 Event Notification –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ S3 notification${NC}"
    exit 1
fi
echo ""

# –®–∞–≥ 2: –î–æ–±–∞–≤–∏—Ç—å SQS event source –¥–ª—è Lambda
echo -e "${YELLOW}üîê –®–∞–≥ 2/3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Lambda trigger –æ—Ç SQS...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ event source mappings
EXISTING_MAPPING=$(aws lambda list-event-source-mappings \
    --function-name "$LAMBDA_FUNCTION" \
    --query "EventSourceMappings[?EventSourceArn=='$QUEUE_ARN'].UUID" \
    --output text)

if [ -z "$EXISTING_MAPPING" ]; then
    # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π event source mapping
    MAPPING_UUID=$(aws lambda create-event-source-mapping \
        --function-name "$LAMBDA_FUNCTION" \
        --event-source-arn "$QUEUE_ARN" \
        --batch-size 10 \
        --query 'UUID' \
        --output text)
    
    echo -e "${GREEN}‚úÖ Lambda trigger —Å–æ–∑–¥–∞–Ω (UUID: $MAPPING_UUID)${NC}"
    
    # –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ trigger —Å—Ç–∞–Ω–µ—Ç enabled
    echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ trigger (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å ~30 —Å–µ–∫—É–Ω–¥)...${NC}"
    sleep 5
    
    for i in {1..12}; do
        STATE=$(aws lambda get-event-source-mapping --uuid "$MAPPING_UUID" --query 'State' --output text)
        if [ "$STATE" == "Enabled" ]; then
            echo -e "${GREEN}‚úÖ Lambda trigger –∞–∫—Ç–∏–≤–µ–Ω${NC}"
            break
        fi
        echo -e "${YELLOW}   –°—Ç–∞—Ç—É—Å: $STATE (–ø–æ–ø—ã—Ç–∫–∞ $i/12)${NC}"
        sleep 5
    done
else
    echo -e "${YELLOW}‚ö†Ô∏è  Lambda trigger —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (UUID: $EXISTING_MAPPING)${NC}"
    STATE=$(aws lambda get-event-source-mapping --uuid "$EXISTING_MAPPING" --query 'State' --output text)
    echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å trigger: $STATE${NC}"
fi
echo ""

# –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
echo -e "${YELLOW}üì§ –®–∞–≥ 3/3: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ S3...${NC}"

# –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
TEST_FILE="/tmp/test-task6-$(date +%s).txt"
echo "This is a test file for Task 6" > "$TEST_FILE"
echo "Uploaded at: $(date)" >> "$TEST_FILE"
echo "S3 + SQS + Lambda event-driven architecture" >> "$TEST_FILE"

# –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ S3
aws s3 cp "$TEST_FILE" "s3://$BUCKET_NAME/input/"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: $(basename $TEST_FILE)${NC}"
    echo -e "${GREEN}   –ü—É—Ç—å: s3://$BUCKET_NAME/input/$(basename $TEST_FILE)${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞${NC}"
    exit 1
fi
echo ""

# –î–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ Lambda —Ñ—É–Ω–∫—Ü–∏–µ–π (15 —Å–µ–∫—É–Ω–¥)...${NC}"
sleep 15
echo ""

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã                 ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ S3 notification configuration
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ S3 Event Notification...${NC}"
NOTIFICATION_CHECK=$(aws s3api get-bucket-notification-configuration \
    --bucket "$BUCKET_NAME" \
    --query 'QueueConfigurations[?QueueArn==`'"$QUEUE_ARN"'`].Id' \
    --output text)

if [ -n "$NOTIFICATION_CHECK" ]; then
    echo -e "${GREEN}‚úÖ S3 Event Notification –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå S3 Event Notification –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi
echo ""

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda event source mapping
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda trigger...${NC}"
MAPPING_STATE=$(aws lambda list-event-source-mappings \
    --function-name "$LAMBDA_FUNCTION" \
    --query "EventSourceMappings[?EventSourceArn=='$QUEUE_ARN'].State" \
    --output text)

if [ "$MAPPING_STATE" == "Enabled" ]; then
    echo -e "${GREEN}‚úÖ Lambda trigger –∞–∫—Ç–∏–≤–µ–Ω${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Lambda trigger —Å—Ç–∞—Ç—É—Å: $MAPPING_STATE${NC}"
fi
echo ""

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ output/
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ output/...${NC}"
OUTPUT_FILES=$(aws s3 ls "s3://$BUCKET_NAME/output/" --recursive 2>/dev/null)

if [ -n "$OUTPUT_FILES" ]; then
    echo -e "${GREEN}‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –≤ output/:${NC}"
    echo "$OUTPUT_FILES" | head -5
    FILE_COUNT=$(echo "$OUTPUT_FILES" | wc -l | tr -d ' ')
    echo -e "${GREEN}   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $FILE_COUNT${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ–∫–∞ –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å${NC}"
    echo -e "${YELLOW}   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É:${NC}"
    echo -e "${YELLOW}   aws s3 ls s3://$BUCKET_NAME/output/ --recursive${NC}"
fi
echo ""

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ input/
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ input/...${NC}"
INPUT_FILES=$(aws s3 ls "s3://$BUCKET_NAME/input/" 2>/dev/null)

if [ -n "$INPUT_FILES" ]; then
    echo -e "${GREEN}‚úÖ –§–∞–π–ª—ã –≤ input/:${NC}"
    echo "$INPUT_FILES" | tail -3
else
    echo -e "${RED}‚ùå –§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ input/${NC}"
fi
echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  ‚úÖ Task 6 –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!          ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""
echo -e "${GREEN}–ß—Ç–æ –±—ã–ª–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:${NC}"
echo -e "  ‚úÖ S3 Event Notification (input/ ‚Üí SQS)"
echo -e "  ‚úÖ Lambda trigger (SQS ‚Üí Lambda)"
echo -e "  ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω"
echo ""
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:${NC}"
echo -e "  ${GREEN}–ò—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã:${NC}"
echo -e "    aws s3 ls s3://$BUCKET_NAME/input/"
echo -e "  ${GREEN}–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:${NC}"
echo -e "    aws s3 ls s3://$BUCKET_NAME/output/ --recursive"
echo ""
echo -e "${YELLOW}–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π —Ñ–∞–π–ª:${NC}"
echo -e "  aws s3 cp myfile.txt s3://$BUCKET_NAME/input/"
echo ""
