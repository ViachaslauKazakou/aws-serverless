#!/bin/bash

# Task 5: Lambda + API Gateway Permissions
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
ROLE_NAME="cmtr-4n6e9j62-iam-lp-iam_role"
LAMBDA_FUNCTION="cmtr-4n6e9j62-iam-lp-lambda"
API_NAME="cmtr-4n6e9j62-iam-lp-apigwv2_api"
REGION="eu-west-1"
ACCOUNT_ID="135808946124"

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  Task 5: Lambda + API Gateway         ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials
if [ -z "$AWS_ACCESS_KEY_ID" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  AWS credentials –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
    echo "export AWS_ACCESS_KEY_ID=AKIAR7HWYB7GGJEF5KH7"
    echo "export AWS_SECRET_ACCESS_KEY=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"
    echo "export AWS_DEFAULT_REGION=eu-west-1"
    exit 1
fi

echo -e "${GREEN}‚úÖ AWS credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
echo ""

# –ü–æ–ª—É—á–∏—Ç—å API Gateway ID
echo -e "${YELLOW}üîç –ü–æ–ª—É—á–µ–Ω–∏–µ API Gateway ID...${NC}"
API_ID=$(aws apigatewayv2 get-apis --query "Items[?Name=='$API_NAME'].ApiId" --output text)
if [ -z "$API_ID" ]; then
    echo -e "${RED}‚ùå API Gateway –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ API Gateway ID: $API_ID${NC}"
API_ENDPOINT=$(aws apigatewayv2 get-apis --query "Items[?Name=='$API_NAME'].ApiEndpoint" --output text)
echo -e "${GREEN}‚úÖ API Endpoint: $API_ENDPOINT${NC}"
echo ""

# –®–∞–≥ 1: Attach AWSLambda_ReadOnlyAccess policy –∫ execution role
echo -e "${YELLOW}üìã –®–∞–≥ 1/2: –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ AWSLambda_ReadOnlyAccess –∫ execution role...${NC}"
aws iam attach-role-policy \
    --role-name "$ROLE_NAME" \
    --policy-arn "arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ AWSLambda_ReadOnlyAccess —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω –∫ —Ä–æ–ª–∏ $ROLE_NAME${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è policy${NC}"
    exit 1
fi
echo ""

# –®–∞–≥ 2: –î–æ–±–∞–≤–∏—Ç—å resource-based policy –¥–ª—è Lambda (—Ä–∞–∑—Ä–µ—à–∏—Ç—å API Gateway –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é)
echo -e "${YELLOW}üîê –®–∞–≥ 2/2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ permission –¥–ª—è API Gateway...${NC}"
aws lambda add-permission \
    --function-name "$LAMBDA_FUNCTION" \
    --statement-id "AllowAPIGatewayInvoke" \
    --action "lambda:InvokeFunction" \
    --principal "apigateway.amazonaws.com" \
    --source-arn "arn:aws:execute-api:$REGION:$ACCOUNT_ID:$API_ID/*/*" \
    2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è  Permission –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"

if [ $? -eq 0 ] || [ $? -eq 254 ]; then
    echo -e "${GREEN}‚úÖ Permission –¥–ª—è API Gateway –¥–æ–±–∞–≤–ª–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è permission${NC}"
    exit 1
fi
echo ""

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã                 ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ attached policy
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ AWSLambda_ReadOnlyAccess –Ω–∞ —Ä–æ–ª–∏...${NC}"
ATTACHED_POLICY=$(aws iam list-attached-role-policies --role-name "$ROLE_NAME" --query "AttachedPolicies[?PolicyName=='AWSLambda_ReadOnlyAccess'].PolicyName" --output text)
if [ "$ATTACHED_POLICY" == "AWSLambda_ReadOnlyAccess" ]; then
    echo -e "${GREEN}‚úÖ AWSLambda_ReadOnlyAccess –Ω–∞–π–¥–µ–Ω –Ω–∞ —Ä–æ–ª–∏${NC}"
else
    echo -e "${RED}‚ùå AWSLambda_ReadOnlyAccess –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi
echo ""

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda permission
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Lambda resource-based policy...${NC}"
LAMBDA_POLICY=$(aws lambda get-policy --function-name "$LAMBDA_FUNCTION" --query 'Policy' --output text 2>/dev/null)
if echo "$LAMBDA_POLICY" | grep -q "apigateway.amazonaws.com"; then
    echo -e "${GREEN}‚úÖ Lambda permission –¥–ª—è API Gateway –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå Lambda permission –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi
echo ""

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –≤—ã–∑–æ–≤–æ–º
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤—ã–∑–æ–≤–∞...${NC}"
API_RESPONSE=$(curl -s -w "\n%{http_code}" "$API_ENDPOINT" 2>/dev/null | tail -1)
if [ "$API_RESPONSE" == "200" ]; then
    echo -e "${GREEN}‚úÖ API —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP 200)${NC}"
    echo -e "${GREEN}   Endpoint: $API_ENDPOINT${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  API response code: $API_RESPONSE${NC}"
fi
echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  ‚úÖ Task 5 –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!          ${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""
echo -e "${GREEN}–ß—Ç–æ –±—ã–ª–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:${NC}"
echo -e "  ‚úÖ AWSLambda_ReadOnlyAccess –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω –∫ execution role"
echo -e "  ‚úÖ Lambda permission –¥–ª—è API Gateway –¥–æ–±–∞–≤–ª–µ–Ω"
echo ""
echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC}"
echo -e "  –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: ${GREEN}$API_ENDPOINT${NC}"
echo ""
